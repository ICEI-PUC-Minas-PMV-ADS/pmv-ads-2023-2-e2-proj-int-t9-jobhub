// <auto-generated />
using JobHub.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JobHub.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231113214442_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("JobHub.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("JobHub.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Perfil")
                        .HasColumnType("integer");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Usuario");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("JobHub.Models.Vaga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Empresa")
                        .HasColumnType("text");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("FormaDeTrabalho")
                        .HasColumnType("text");

                    b.Property<string>("Local")
                        .HasColumnType("text");

                    b.Property<string>("Nivel")
                        .HasColumnType("text");

                    b.Property<string>("Salario")
                        .HasColumnType("text");

                    b.Property<string>("Skills")
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Vagas");
                });

            modelBuilder.Entity("JobHub.Models.VagaCandidato", b =>
                {
                    b.Property<int>("CandidatoId")
                        .HasColumnType("integer");

                    b.Property<int>("VagaId")
                        .HasColumnType("integer");

                    b.HasKey("CandidatoId", "VagaId");

                    b.HasIndex("VagaId");

                    b.ToTable("VagaCandidatos");
                });

            modelBuilder.Entity("JobHub.Models.Candidato", b =>
                {
                    b.HasBaseType("JobHub.Models.Usuario");

                    b.Property<string>("AreaDeInteresse")
                        .HasColumnType("text");

                    b.Property<string>("CvURL")
                        .HasColumnType("text");

                    b.Property<string>("Experiencia")
                        .HasColumnType("text");

                    b.Property<string>("Formacao")
                        .HasColumnType("text");

                    b.Property<string>("Habilidades")
                        .HasColumnType("text");

                    b.Property<int>("Idade")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SobreMim")
                        .HasColumnType("text");

                    b.Property<int>("Telefone")
                        .HasColumnType("integer");

                    b.ToTable("Usuarios", t =>
                        {
                            t.Property("Telefone")
                                .HasColumnName("Candidato_Telefone");
                        });

                    b.HasDiscriminator().HasValue("Candidato");
                });

            modelBuilder.Entity("JobHub.Models.Empresa", b =>
                {
                    b.HasBaseType("JobHub.Models.Usuario");

                    b.Property<int>("Cnpj")
                        .HasColumnType("integer");

                    b.Property<string>("Endereco")
                        .HasColumnType("text");

                    b.Property<string>("NomeDaEmpresa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SobreEmpresa")
                        .HasColumnType("text");

                    b.Property<int>("Telefone")
                        .HasColumnType("integer");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator().HasValue("Empresa");
                });

            modelBuilder.Entity("JobHub.Models.Vaga", b =>
                {
                    b.HasOne("JobHub.Models.Categoria", "Categoria")
                        .WithMany("Vagas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobHub.Models.Empresa", "EmpresaVaga")
                        .WithMany("VagasCriadas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("EmpresaVaga");
                });

            modelBuilder.Entity("JobHub.Models.VagaCandidato", b =>
                {
                    b.HasOne("JobHub.Models.Candidato", "Candidato")
                        .WithMany("VagasAplicadas")
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobHub.Models.Vaga", "Vaga")
                        .WithMany("CandidatosAplicados")
                        .HasForeignKey("VagaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidato");

                    b.Navigation("Vaga");
                });

            modelBuilder.Entity("JobHub.Models.Categoria", b =>
                {
                    b.Navigation("Vagas");
                });

            modelBuilder.Entity("JobHub.Models.Vaga", b =>
                {
                    b.Navigation("CandidatosAplicados");
                });

            modelBuilder.Entity("JobHub.Models.Candidato", b =>
                {
                    b.Navigation("VagasAplicadas");
                });

            modelBuilder.Entity("JobHub.Models.Empresa", b =>
                {
                    b.Navigation("VagasCriadas");
                });
#pragma warning restore 612, 618
        }
    }
}
